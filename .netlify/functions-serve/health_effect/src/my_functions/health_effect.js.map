{
  "version": 3,
  "sources": ["../../../../../../Users/jan/dev/toxin-next/my_functions/health_effect.js"],
  "sourceRoot": "/var/folders/7t/84dntczj4c72zrm8pfk8p53r0000gn/T/tmp-33087-fskm25XX5JOO",
  "sourcesContent": ["\nimport fetch from 'node-fetch';\n\nconst endpointMaker = (n) => `https://wise.vub.ac.be/fuseki/${n}/sparql`;\nconst constructQuery = (e, q) => `${endpointMaker(e)}?query=${encodeURIComponent(q)}&format=json`;\n\n\nconst sparqlQuery = ` \n\t\tPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\t\tPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n\t\tPREFIX ont: <http://ontologies.vub.be/oecd#>\n\n\t\tSELECT DISTINCT *\n\t\t{\n\t\t\t?test a ont:Test .\n\t\t\t?test ont:compound ?compound .\n\t\t\t?compound rdfs:label ?compoundLabel .\n\t\t\t?test rdf:type ?type .\n\n\t\t# \tconst test_endpoints_keys = [\n\t\t#     'target_organ',\n\t\t#     'observations',\n\t\t#     'dose_descriptor',\n\t\t#     'moribund_or_dead_animals_prior_to_study_termination',\n\t\t#     'mortality_rate',\n\t\t#     'conclusion'\n\t\t# ];\n\n\t\t\tOPTIONAL { ?test ont:target_organ ?target_organ .  }\n\t\t\tOPTIONAL { ?test ont:observations ?observations .  }\n\t\t\tOPTIONAL { ?test ont:dose_descriptor ?dose_descriptor .  }\n\t\t\tOPTIONAL { ?test ont:moribound_or_dead_animals_prior_to_study_termination ?moribound_or_dead_animals_prior_to_study_termination .  }\n\t\t\tOPTIONAL { ?test ont:mortality_rate ?mortality_rate .  }\n\t\t\tOPTIONAL { ?test ont:conclusion ?conclusion .  }\n\n\t\t# const test_conditions_keys = [\n\t\t#     'dose_levels',\n\t\t#     'dose_level_unit',\n\t\t#     'dose_volume',\n\t\t#     'rinsing_procedure',\n\t\t#     'vehicle_concentration',\n\t\t#     'exposure_time',\n\t\t#     'observation_period'\n\t\t# ]\n\n\t\t\tOPTIONAL { ?test ont:dose_levels ?dose_levels .  }\n\t\t\tOPTIONAL { ?test ont:dose_level_unit ?dose_level_unit .  }\n\t\t\tOPTIONAL { ?test ont:dose_volume ?dose_volume .  }\n\t\t\tOPTIONAL { ?test ont:rinsing_procedure ?rinsing_procedure .  }\n\t\t\tOPTIONAL { ?test ont:vehicle_concentration ?vehicle_concentration .  }\n\t\t\tOPTIONAL { ?test ont:exposure_time ?exposure_time .  }\n\t\t\tOPTIONAL { ?test ont:observation_period ?observation_period .  }\n\n\t\t# const test_substance_keys = [\n\t\t#     'homogeneity_and_stability',\n\t\t#     'treatment_prior_to_application',\n\t\t#     'physical_form',\n\t\t#     'concentration',\n\t\t#     'composition',\n\t\t#     'purity',\n\t\t#     'solubility_in_vehicle',\n\t\t#     'chemical_batch_nr',\n\t\t#     'particle_size',\n\t\t#     'additional_info'\n\t\t# ];\n\n\t\t\tOPTIONAL { ?test ont:homogeneity_and_stability ?homogeneity_and_stability .  }\n\t\t\tOPTIONAL { ?test ont:treatment_prior_to_application ?treatment_prior_to_application .  }\n\t\t\tOPTIONAL { ?test ont:physical_form ?physical_form .  }\n\t\t\tOPTIONAL { ?test ont:concentration ?concentration .  }\n\t\t\tOPTIONAL { ?test ont:composition ?composition .  }\n\t\t\tOPTIONAL { ?test ont:purity ?purity .  }\n\t\t\tOPTIONAL { ?test ont:solubility_in_vehicle ?solubility_in_vehicle .  }\n\t\t\tOPTIONAL { ?test ont:chemical_batch_nr ?chemical_batch_nr .  }\n\t\t\tOPTIONAL { ?test ont:particle_size ?particle_size .  }\n\t\t\tOPTIONAL { ?test ont:additional_info ?additional_info .  }\n\n\t\t# const route_of_exposure_keys = [\n\t\t#     'oral',\n\t\t#     'dermal',\n\t\t#     'body_surface',\n\t\t#     'patching_technique',\n\t\t#     'skin_condition',\n\t\t#     'inhalation',\n\t\t#     'other'\n\t\t# ];\n\n\t\t\tOPTIONAL { ?test ont:oral ?oral .  }\n\t\t\tOPTIONAL { ?test ont:dermal ?dermal .  }\n\t\t\tOPTIONAL { ?test ont:body_surface ?body_surface .  }\n\t\t\tOPTIONAL { ?test ont:patching_technique ?patching_technique .  }\n\t\t\tOPTIONAL { ?test ont:skin_condition ?skin_condition .  }\n\t\t\tOPTIONAL { ?test ont:inhalation ?inhalation .  }\n\t\t\tOPTIONAL { ?test ont:other ?other .  }\n\n\t\t# const test_species_keys = [\n\t\t#     'species',\n\t\t#     'source',\n\t\t#     'age_at_start_of_experiment',\n\t\t#     'age_measuring_unit',\n\t\t#     'sex',\n\t\t#     'weight',\n\t\t#     'weight_measuring_unit',\n\t\t#     'feed',\n\t\t#     'n_animals_dose',\n\t\t# ];\n\n\t\t\tOPTIONAL { ?test ont:species ?species.  }\n\t\t\tOPTIONAL { ?test ont:source ?source .  }\n\t\t\tOPTIONAL { ?test ont:age_at_start_of_experiment ?age_at_start_of_experiment .  }\n\t\t\tOPTIONAL { ?test ont:age_measuring_unit ?age_measuring_unit .  }\n\t\t\tOPTIONAL { ?test ont:sex ?sex .  }\n\t\t\tOPTIONAL { ?test ont:weight ?weight .  }\n\t\t\tOPTIONAL { ?test ont:weight_measuring_unit ?weight_measuring_unit .  }\n\t\t\tOPTIONAL { ?test ont:feed ?feed .  }\n\t\t\tOPTIONAL { ?test ont:n_animals_dose ?n_animals_dose .  }\n\n\t\t# const reliability_of_test_keys = [\n\t\t#     'scss_comment_to_test',\n\t\t#     'year',\n\t\t#     'control_groups',\n\t\t#     'glp',\n\t\t#     'klimisch_score',\n\t\t#     'Ref_in_dossier'\n\t\t# ];\n\n\t\t\tOPTIONAL { ?test ont:scss_comment_to_test ?scss_comment_to_test .  }\n\t\t\tOPTIONAL { ?test ont:year ?year .  }\n\t\t\tOPTIONAL { ?test ont:control_groups ?control_groups .  }\n\t\t\tOPTIONAL { ?test ont:glp ?glp .  }\n\t\t\tOPTIONAL { ?test ont:klimisch_score ?klimisch_score .  }\n\t\t\tOPTIONAL { ?test ont:ref_in_dossier ?ref_in_dossier .  }\n\t\t}\t\n\t`;\n\nexports.handler = async function (event, context) {\n    console.log('context', context);\n    console.log('event', event);\n    // fetch(constructQuery('repeated-toxicity', sparqlQuery)).then((res) => res.json()).then(res => {\n    //     // console.log('res', res)\n\n    //     return {\n    //         statusCode: 200,\n    //         body: JSON.stringify(res),\n    //     };\n\n    // })\n    return {\n        statusCode: 200,\n        body: JSON.stringify({ message: \"test\" }),\n    };\n\n}"],
  "mappings": ";AAuIA,QAAQ,UAAU,eAAgB,OAAO,SAAS;AAC9C,UAAQ,IAAI,WAAW;AACvB,UAAQ,IAAI,SAAS;AAUrB,SAAO;AAAA,IACH,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU,EAAE,SAAS;AAAA;AAAA;",
  "names": []
}
